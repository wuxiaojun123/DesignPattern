package com.example.java_jichu.yunsuanfu;

/**
 * int 类型占用4字节，32位，一个字节占用8位
 *
 * 移位运算符 >>和<<,>>>
 * << 按位左移，将一个整数左移两位，右边补0。
 *   15 << 2 结果为60，15的二进制为0000 1111,右移2位则为，0011 1100，这样就是60
 *   当移位为负数时，例如，a << -4，这里比较复杂，先要拿到-4的补码，然后再取低位，再进行计算
 *
 * >> 按位右移，将一个整数右边移动两位，如果整数为正整数，则右边补0，如果整数为负数，则左边补1
 * >>> 无符号右移，将一个数的二进制数全部右移，右边补0，低位舍弃
 *
 * & 按位与.两个进行运算的整数，按照二进制位进行与运算，只有当两个相对应的二进制位为1，则该位为1，否则为0
 *  1&1 = 1；1&0=0；0&1=0；0&0=0
 * | 按位或.两个进行运算的整数，按照二进制位进行或运算，只要两个相对应的二进制有一个为1，则该位为1，否则为0
 *  1|1=1；1|0=1；0|1=1；0|0=0
 * ~ 按位取反，0变成1，1变成0
 * ^ 两个二进制位结果相同为0，否则为1.
 *
 * Created by wuxiaojun on 2017/12/21.
 */

public class YiWeiTest1 {

    public static void main(String[] args) {
        int a = 3 & 4; // 先把3和4都换成二进制数，然后两个数都为1则为1，其他情况都为0，3的二进制数是11,4的二进制数是20
        System.out.println(a);

        int b = 5 << -10;
        System.out.println(b);
    }

}
